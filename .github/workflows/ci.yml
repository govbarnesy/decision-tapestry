name: CI

on:
  push:
    branches:
      - main
      - 'release-*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - 'release-*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint (root)
        run: yarn lint || echo "No root lint script"

      - name: Lint (decision-tapestry)
        run: cd decision-tapestry && yarn lint || echo "No lint script"

      - name: Lint (vscode-extension)
        run: cd vscode-extension && yarn lint || echo "No lint script"

      - name: Test (decision-tapestry)
        run: cd decision-tapestry && yarn test

      - name: Test (vscode-extension)
        run: cd vscode-extension && yarn test || echo "No test script"

      - name: Build (decision-tapestry)
        run: cd decision-tapestry && yarn build

      - name: Build (vscode-extension)
        run: cd vscode-extension && yarn build

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build (decision-tapestry)
        run: cd decision-tapestry && yarn build

      - name: Build (vscode-extension)
        run: cd vscode-extension && yarn build

      - name: Publish decision-tapestry/shared to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd decision-tapestry/shared
          npm publish --access public

      - name: Publish decision-tapestry to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd decision-tapestry
          npm publish --access public

  docker-publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER }}

      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./decision-tapestry
          file: ./decision-tapestry/Dockerfile
          push: true
          tags: |
            govbarnesy/decision-tapestry-server:latest
            govbarnesy/decision-tapestry-server:${{ steps.get_version.outputs.version }}
